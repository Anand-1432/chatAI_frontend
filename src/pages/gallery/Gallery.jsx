import React, { useEffect, useState } from 'react'
import './gallery.scss'
import Header from '../../components/header/Header'
import SideBar from '../../components/sideBar/SideBar'
import { Bars } from 'react-loader-spinner'
import { useDispatch, useSelector } from 'react-redux';
import { requestGallery } from '../../actions/galleryAction';


const Gallery = () => {

    const { gallery, galleryLoading } = useSelector(state => state.galleryReducer);
    const dispatch = useDispatch();

    const [itemData, setItemData] = useState([]);

    // useEffect(() => {
    //     if (gallery.length == 0) {
    //         dispatch(requestGallery());
    //     }
    // }, []);

    useEffect(() => {
        if (gallery.length > 0) {
            setItemData(gallery);
        }
    }, [gallery]);



    return (
        <>

            <div className='gallery'>
                <Header />

                <div className='galleryLeft'>
                    <SideBar />
                </div>

                <div className='galleryRight'>

                    <div className='inner'>

                        {galleryLoading ? <div className='galleryLoader'>
                            <Bars
                                height="60"
                                width="60"
                                color={`var(--color2)`}
                                ariaLabel="bars-loading"
                                wrapperStyle={{}}
                                wrapperClass=""
                                visible={true}
                            />
                        </div> : null}


                        <div className='innerImages'>
                            <div className='community'>
                                The Community Showcase
                            </div>
                            <section>Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</section>


                            <div className='imageBoxCon'>
                                {itemData.map((item, index) => (
                                    <div className='imageBox' key={index}>
                                        <img src={item.url} alt="" />
                                        <div className='data'>
                                            <div className='name'>{item.user}</div>
                                            <div className='title'>@{item.title}</div>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </>
    )
}

export default Gallery